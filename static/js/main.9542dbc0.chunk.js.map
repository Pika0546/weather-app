{"version":3,"sources":["components/Form/Form.js","components/MainWeather/Main.js","components/Weekday/Weekday.js","components/City/City.js","img/cloud1.png","App.js","reportWebVitals.js","index.js"],"names":["Form","getCityName","useState","name","setName","className","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","autoComplete","Main","mainWeather","humidity","temp","visibility","weather","src","icon","description","Math","round","Weekday","weekday","timeoffset","console","log","myWeek","map","item","index","dt","timeToDisplay","Date","toUTCString","split","slice","join","main","day","City","keyy","defaultState","data","isLoading","timezone","cityName","isError","isStarting","App","myState","setMyState","getFetch","url","a","fetch","response","json","tempData","mainScreen","cuteCloud","alt","tempPromise1","then","cod","cityLat","coord","lat","cityLon","lon","valueData","daily","current","timezone_offset","error","getData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9542dbc0.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nconst Form = ({getCityName}) => {\r\n\r\n    const [name, setName] = useState(\"\")\r\n\r\n    const handleChange = (event) =>{\r\n        let value = event.target.value;\r\n        setName(value);\r\n    }\r\n\r\n    const handleSubmit = (event) =>{\r\n        event.preventDefault();\r\n        getCityName(name);\r\n    }\r\n\r\n    return (\r\n        <div className=\"form__container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form__group\">\r\n                    <input \r\n                        name=\"city\" \r\n                        type=\"text\" \r\n                        placeholder='Enter a city'\r\n                        value={name}\r\n                        onChange={handleChange}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <button type=\"submit\"><i className=\"fas fa-search\" /></button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst Main = ({mainWeather}) => {\r\n  \r\n    let {humidity, temp, visibility, weather} = mainWeather;\r\n    return (\r\n        <div className=\"city-weather__main\">\r\n            <div className=\"main-weather__icon\">\r\n                <img src={\"http://openweathermap.org/img/wn/\" + weather[0].icon + \".png\"}></img>\r\n                <h4>{weather[0].description}</h4>\r\n            </div>\r\n            <div className=\"main-weather__tempature\">\r\n                {Math.round(temp - 273) + \"°C\"}\r\n            </div>\r\n            <div className=\"main-weather__more\">\r\n                <span>Humidity: {humidity}%</span>\r\n                \r\n                <span>Visibility: {Math.round(visibility/1000)}km</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\n\r\nconst Weekday = ({weekday, timeoffset}) => {\r\n    console.log(weekday)\r\n    let myWeek = weekday.map((item, index)=>{\r\n        if(index === 0 || index === 7){\r\n            return \"\";\r\n        }\r\n        else{\r\n            let {dt, temp, weather} = item;\r\n            let timeToDisplay = new Date(dt*1000 + timeoffset*1000).toUTCString().split(' ').slice(0,2).join(' ');\r\n            return (<div key={index} className=\"city-weather__weekday__dow\">\r\n                        <div className=\"city-weather__weekday__date\">\r\n                           {timeToDisplay}\r\n                        </div>\r\n                        <div className=\"city-weather__weekday__icon\">\r\n                            <img src={\"http://openweathermap.org/img/wn/\" + weather[0].icon + \".png\"}></img>\r\n                            <h4>{weather[0].main}</h4>\r\n                        </div>\r\n                        <div className=\"city-weather__weekday__info\">\r\n                            <span>{Math.round(temp.day)- 273 + \"°C\"}</span>\r\n                        </div>\r\n                    </div>)\r\n        }\r\n    })\r\n    return (\r\n        <div className=\"city-weather__weekday\">\r\n            {myWeek}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weekday\r\n","import React from 'react'\r\nimport Main from '../MainWeather/Main';\r\nimport Weekday from '../Weekday/Weekday';\r\nconst City = ({mainWeather, weekday, name, timeoffset}) => {\r\n\r\n    // console.log(mainWeather, weekday, name, timeoffset)\r\n    let timeToDisplay = new Date(mainWeather.dt*1000 + timeoffset*1000).toUTCString().split(' ').slice(0,4).join(' ');\r\n    \r\n    return (\r\n        <div className=\"city-weather__container\">\r\n            <div className=\"city-weather__header\">\r\n                <h1>{name}</h1>\r\n                <h4>{timeToDisplay}</h4>\r\n            </div>\r\n           \r\n            <Main mainWeather={mainWeather}></Main>\r\n\r\n            <Weekday timeoffset={timeoffset} weekday={weekday}></Weekday>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default City\r\n","export default __webpack_public_path__ + \"static/media/cloud1.51bd35d1.png\";","import React , {useEffect, useReducer, useState} from 'react';\nimport Form from './components/Form/Form';\nimport City from './components/City/City';\nimport './App.scss'\nimport cuteCloud from './img/cloud1.png';\nconst keyy = \"b40ad438d30cd97d2c827d23ceb76829\";\n\nconst defaultState = {\n\tdata: [],\n\tisLoading: false,\n\tmainWeather: {},\n\ttimezone: 0,\n\tcityName: \"\",\n\tisError: false,\n\tisStarting: true,\n}\n\nfunction App() {\n\n\n\tconst [myState, setMyState] = useState(defaultState);\n\n\tconst getFetch = async (url) => {\n\t\tconst response = await fetch(url);\n\t\tconst tempData = await response.json();\n\t\treturn tempData;\n\t\t\n\t}\n\tconst getData = (cityName) =>{\n\t\tlet urlCoord=\"https://api.openweathermap.org/data/2.5/weather?q=\"+cityName+\"&appid=\" + keyy;\n\t\tlet tempPromise1 = getFetch(urlCoord);\n\t\t// getFetch(urlCoord);\n\t\tconsole.log(\"data\", tempPromise1)\n\t\t\n\t\ttempPromise1.then((value) => {\n\t\t\tif(value.cod === 200){\n\t\t\t\tlet cityLat = value.coord.lat;\n\t\t\t\tlet cityLon = value.coord.lon;\n\t\t\t\tlet urlData = \"https://api.openweathermap.org/data/2.5/onecall?lat=\"+cityLat+\"&lon=\"+cityLon+\"&exclude=hourly&appid=\" + keyy;\n\t\t\t\tlet temPromise2 = getFetch(urlData);\n\t\t\t\ttemPromise2.then((valueData) => {\n\t\t\t\t\tsetMyState({\n\t\t\t\t\t\tdata: valueData.daily,\n\t\t\t\t\t\tcityName: cityName,\n\t\t\t\t\t\tmainWeather: valueData.current,\n\t\t\t\t\t\ttimezone: valueData.timezone_offset,\n\t\t\t\t\t\tisLoading: false,\n\t\t\t\t\t\tisError:false,\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}else{\n\t\t\t\tsetMyState({\n\t\t\t\t\t...myState,\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tisError: true,\n\t\t\t\t})\n\t\t\t}\n\t\t}, (error) => {\n\t\t\tconsole.log(\"error\", error);\n\t\t})\n\t}\n\n\tconst hanldeSubmit = (cityName) =>{\n\t\tsetMyState({\n\t\t\t...myState,\n\t\t\tisLoading: true,\n\t\t\tisStarting: false,\n\t\t\t\n\t\t})\n\t\tgetData(cityName);\n\t}\n\n\n\n\tlet containerClass = \"container bg-clear \";\n\t\n\tlet mainScreen = \"\";\n\tif(myState.isStarting){\n\t\tmainScreen = <div>\n\t\t\t\t\t\t<img className=\"cute-cloud\" src={cuteCloud} alt=\"cloud\"></img>\n\t\t\t\t\t\t<h2 className=\"anoucement\">\n\t\t\t\t\t\t\tHello\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t</div>\n\t}\n\tif(myState.isLoading){\n\t\tmainScreen =<div>\n\t\t\t\t\t\t<img className=\"cute-cloud\" src={cuteCloud} alt=\"cloud\"></img>\n\t\t\t\t\t\t<h2 className=\"anoucement\">\n\t\t\t\t\t\t\tLoading...\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t</div>\n\t}\n\n\tif(myState.isError){\n\t\tmainScreen =<div>\n\t\t\t\t\t<img className=\"cute-cloud\" src={cuteCloud} alt=\"cloud\"></img>\n\t\t\t\t\t<h2 className=\"anoucement\">\n\t\t\t\t\t\t<span>Sorry! <br/> I couldn't find your city</span>\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\t}\n\n\treturn (\n\t\t\n\t\t<div className={containerClass}>\n\t\t\t<Form getCityName={hanldeSubmit}></Form>\n\t\t\t{/* {myState.isLoading ? \n\t\t\t\t<div>\n\t\t\t\t\t<img className=\"cute-cloud\" src={cuteCloud} alt=\"cloud\"></img>\n\t\t\t\t\t<h2 className=\"anoucement\">\n\t\t\t\t\t\t{myState.isError ? <span>Oops! <br/> I can't find your city</span> : \"loading...\"}\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\t\t\t\t:\n\t\t\t\t<City\n\t\t\t\t\tname={myState.cityName}\n\t\t\t\t\tmainWeather={myState.mainWeather}\n\t\t\t\t\tweekday={myState.data}\n\t\t\t\t\ttimeoffset={myState.timezone}\n\t\t\t\t></City>\n\t\t\t} */}\n\t\t\t{mainScreen}\n\t\t\t{mainScreen ? \"\" :<City\n\t\t\t\t\t\t\t\tname={myState.cityName}\n\t\t\t\t\t\t\t\tmainWeather={myState.mainWeather}\n\t\t\t\t\t\t\t\tweekday={myState.data}\n\t\t\t\t\t\t\t\ttimeoffset={myState.timezone}\n\t\t\t\t\t\t\t></City> }\n\t\t</div>\n\t)\n \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}